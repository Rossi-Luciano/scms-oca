from django.db import models
from django.utils.translation import gettext as _
from wagtail.admin.edit_handlers import FieldPanel, InlinePanel

from core.models import CommonControlField

from . import choices
from .forms import IndicatorDirectoryForm
from usefulmodels.models import Action, Practice
from institution.models import Institution
from location.models import Location

class Indicator(CommonControlField):
    name = models.CharField(_("Name"), max_length=255, null=True, blank=True)
    action = models.ForeignKey(Action, verbose_name=_("Action"), on_delete=models.SET_NULL, max_length=255, null=True, blank=True)
    practice = models.ForeignKey(Practice, verbose_name=_("Practice"), on_delete=models.SET_NULL, max_length=255, null=True, blank=True)
    identifier = models.CharField(_("Identifier"), max_length=10, null=True, blank=True)
    generation_date = models.DateField(_("Generation date"), max_length=255, null=True, blank=True)
    generated_by = models.CharField(_("Generated by"), max_length=255, null=True, blank=True)
    registered_by = models.CharField(_("Registered by"), max_length=255, null=True, blank=True)
    record_status = models.CharField(_("Record status"), choices=choices.status, max_length=255, null=True, blank=True)
    availability_status = models.CharField(_("Availability status"), choices=choices.availability, max_length=255, null=True, blank=True)
    previous_record = models.ForeignKey(_("Indicator"), on_delete=models.SET_NULL, max_length=255, null=True, blank=True)
    open_access =  models.CharField(_("Open access"), choices=choices.open_access, max_length=255, null=True, blank=True)
    qualifier = models.CharField(_("Qualifier"), max_length=255, null=True, blank=True)
    source = models.CharField(_("Source"), max_length=255, null=True, blank=True)
    institutional_context = models.ForeignKey(Institution, verbose_name=_("Institutional context"), on_delete=models.SET_NULL, max_length=255, null=True, blank=True)
    geographic_context = models.ForeignKey(Location, verbose_name=_("Geographic context"), on_delete=models.SET_NULL, max_length=255, null=True, blank=True)

    panels = [
        FieldPanel('name'),
        FieldPanel('action'),
        FieldPanel('practice'),
        FieldPanel('identifier'),
        FieldPanel('generation_date'),
        FieldPanel('registered_by'),
        FieldPanel('record_status'),
        FieldPanel('availability_status'),
        FieldPanel('previous_record'),
        FieldPanel('open_access'),
        FieldPanel('qualifier'),
        FieldPanel('source'),
        FieldPanel('institutional_context'),
        FieldPanel('geographic_context'),
    ]

    def __unicode__(self):
        return u'%s - %s' % (self.identifier, self.name)

    def __str__(self):
        return u'%s - %s' % (self.identifier, self.name)

    base_form_class = IndicatorDirectoryForm
